https://codepen.io/bbradleylambda/pen/rNxdKKe?editors=1100

<!-- Questions to Submit in today's file first-lastname.txt --> 
<!--
Copy the questions below into the first-lastname.txt file on your github repo - answer each question and then push your changes. 

    1. What is Semantic HTML?
        Semantic HTML is HTML that has a meaning and structure. A header not
        only creates an block element, but specifies that it appears at the 
        head of the page. 
    2. What is HTML used for?
        HTML is the markup language used by web browsers. It provides the
        structure of the website 
    3. What is an attribute and where do we put it?
        An attribute tells the browser more information about an element
        in your HTML. It goes within the opening tag of the HTML. 
    4. What is the h1 tag used for? How many times should I use it on a page?
        An h1 tag is used to create a heading with the most importance. It
        should be used only once, by convention.
    5. Name two tags that have required attributes
        The <img> tag, and the <input> tag.
    6. What do we put in the head of our HTML document?
        The <title> tag. 
    7. What is an id? 
        An id is a unique identifier set as an attribute for a specific HTML
        element.
    8. What elements can I add an id to? 
        Any element as long as it is a unique id.
    9. How many times can I use the same id on a page? 
        One time.
    10. What is a class?
        A class is a non-unique identifier attached to an HTML element. 
    11. What elements can I add a class to? 
        Any element.
    12. How many times can I use the same class on a page? 
        As many times as you wish.
    13. How do I get my link to open in a new tab?
        Set the target attribute to equal '_blank'
    14. What is the alt attribute in the image tag used for?
        Screen readers and accessibility functions.
    15. How do I reference an id?
        Use the '#' symbol.
    16. What is the difference between a section and a div
        A section has semantic meaning, and the div does not.
    17. What is CSS used for?
        CSS is used for styling a web page. 
    18. How to we select an element? Example - every h2 on the page
        h2 {

        }
    19. What is the difference between a class and an id? - Give me an example of when I might use each one
        A class is a non-unique identifier, and an id is a unique identifier.
        You might use a class to change every 2nd paragraph to a certain color,
        when hovered over. You might use an ID if you need to reference a specific
        element within the page, like a login form.
    20. How do we select classes in CSS?
        .class-name{

        }
    21. How do we select a p element with a single class of “human””?
        p .human{
            
        }
    22. What is a parent child selector? When would this be useful?
        A parent child selector, or div > p, selects all elements with a specific parent.
        This might be useful if you want to style every element with that parent element. 
    23. How do you select all links within a div with the class of sidebar?
        div .sidebar a{

        }
    24. What is a pseudo selector?
        A pseudo selector selects based on a state of an element.
    25. What do we use the change the spacing between lines?
        The line-height property.
    26. What do we use to change the spacing between letters?
        The letter-spacing property.
    27. What do we use to to change everything to CAPITALS? lowercase? Capitalize?
        The text-tranform property:
            text-transform: uppercase;
            text-tranform: lowercase;
            text-transform: capitalize;
    28. How do I add a 1px border around my div that is dotted and black?
            The border property:
                border: 1px dotted black;
    29. How do I select everything on the page? 
        The * selector:
            *{

            }
    30. How do I write a comment in CSS?
        You create a comment using /* comment goes here */
    31. How do I find out what file I am in, when I am using the command line?
        Use the 'pwd', or print working directory command. 
    32. Using the command line - how do I see a list of files/folders in my current folder?
        Use the 'ls', or list, command
    33. How do I remove a file via the command line? Why do I have to be careful with this?
        Use the 'rm', or remove command. There is no warning, and no going back when using rm.
    34. Why should I use version control?
        To make collaboration easier, and to make conflicts and revision easier.
    35. How often should I commit to github?
        You should commit whenever you have made any substantial change to the codebase.
    36. What is the command we would use to push our repo up to github?
        git push  <REMOTENAME> <BRANCHNAME> 
    37. Walk me through Lambda's git flow. 
        1. Fork the repo you will be using.
        2. Confirm your name is in front of the repo name.
        3. Add your TL as a collaborator.
        4. Clone the repo from github
        5. On the CLI, navigate to the directory you want them
        repo to be located.
        6. Use 'git clone linkaddress' to clone the repo.
        7. Navigate to the repo using cd.
        8. Use 'git checkout -b 'firstname-lastname' to create
        a new branch named firstname-lastname of the repo.
        9. Work on the repo, and finish the project.
        10. Use 'git add .' to add all changes and make them ready to commit.
        Then use 'git commit -m "message"' to commit the changes with your message.
        11. Push the changes back up to github using 'git push -u origin branch-name'
        12. Make sure you are on your branch of the project repo.
        13. Select 'New pull request'
        14. Change the base repository to the forked repo on your github, and not the original
        15. Add your TL to reviewers
        16. Wait for the TL to merge your pull request. 

Stretch Questions

    1. What is the difference between an inline element and a block element?
        A block element starts on a new line and takes up the full width available. An in-line element
        do not start on a new line, and only take up the width necessary.
    2. What happens when an element is positioned absolutely?
        When an element is positoned absolutely, it will remain positioned relative to its nearest ancestor.
        If no ancestor is positioned, then it will move along with the page. 
    3. How do I make an element take up only the amount of space it needs but also have the ability to give it a width?
        Use the diplay: inline-block; attribute.
    4. Name 3 elements that are diplay block by default, 2 elements that are display inline by default and 1 element that is display inline-block by default
        <div>, <h1>, and <footer> are all block by default, <span>, and <a> are inline by default, and <img> is inline-block by default.
    5. In your own words, explain the box model. What is the "fix" for the box model, in other words, how do we make all elements respect the width we've given them? 
        The box model is a box that goes around HTML elements. It includes the content, and the properties of the box like the border, padding, and margins.
        The "fix" for the box model is to include the width and height of the paddings, margins, and borders within the calculation for
        the "size" of the box. When you set the width property you are only setting the content size.
        By adding width, border, padding, and margin you get the true width of the box.


   --> 